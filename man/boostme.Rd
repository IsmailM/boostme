% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/boostme.R
\name{boostme}
\alias{boostme}
\title{Function for training and and imputing with a boostme model.}
\usage{
boostme(bs, imputeAndReplace = TRUE, trainChr = "chr1",
  validateChr = "chr22", testChr = "chr2", minCov = 10,
  sampleAvg = TRUE, neighbMeth = TRUE, neighbDist = TRUE,
  featureBEDs = NULL, threads = 2)
}
\arguments{
\item{bs}{a bsseq object containing the methylation & coverage values
as well as the features loaded into \code{pData(bs)}. If no features
are loaded into \code{pData(bs)}, the model will simply use neighboring
CpGs and the sample average of the other CpGs.}

\item{imputeAndReplace}{boolean of whether or not to impute and replace
CpG methylation values below the minCov. Default is TRUE.}

\item{trainChr}{which chromosome(s) to use for training.
default = chr3 (approximately 1.5 million CpGs). Note that the more CpGs
used for training, the more memory required to train and store the model.}

\item{validateChr}{which chromosome(s) to use for validation.
default = chr22 (approximately 550,000 CpGs).}

\item{testChr}{which chromosome(s) to use for testing.
default = chr4 (approximately 1.4 million CpGs).}

\item{minCov}{the minimum coverage required to consider a methylation
value trainable, default is 10.}

\item{sampleAvg}{boolean of whether to not to include the sample average
as a feature. Default is TRUE.}

\item{neighbMeth}{boolean of whether or not to include nearest non-missing
neighboring CpG methylation values. Default is TRUE.}

\item{neighbDist}{boolean of whether or not to include nearest non-missing
neighboring CpG distances. Default is TRUE.}

\item{featureBEDs}{optional named list of paths to BED files to be included
as features in the model. Names are used as the feature name;
e.g. list(chromState = "chromatinStates.bed")}

\item{threads}{(optional) number of threads to use for training. default = 2}
}
\value{
a new bsseq object that has the imputed values (if imputeAndReplace
is TRUE). Otherwise doesn't return anything; just prints RMSE (dry run).
}
\description{
Uses the \code{xgboost} framework (C) Tianqi Chen, Tong He, Michael Benesty,
Vadim Khotilovich, Yuan Tang. Sample average feature requires at
least 3 samples in the bsseq object.
}
